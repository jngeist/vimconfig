" ~/Dropbox/vim/sessions/ipad.vim: Vim session script.
" Created by ~/Dropbox/vim/autoload/session.vim on 10 May 2011 at 14:22:36.
" Open this file in Vim and run :source % to restore your session.

set guioptions=
set guifont=
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if !exists('g:colors_name') || g:colors_name != 'molokai' | colorscheme molokai | endif
call setqflist([{'lnum': 238, 'col': 43, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/Users/joshuag/Dropbox/vim/doc/bufexplorer.txt', 'text': '           MRU sort order after loading a session.'}, {'lnum': 310, 'col': 35, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/autocmd.txt', 'text': '|SessionLoadPost|	after loading a session file'}, {'lnum': 698, 'col': 37, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/autocmd.txt', 'text': 'SessionLoadPost			After loading the session file created using'}, {'lnum': 699, 'col': 13, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/autocmd.txt', 'text': '				the |:mksession| command.'}, {'lnum': 1256, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/autocmd.txt', 'text': 'editing session.  When recovering from the original file, Vim reads only those'}, {'lnum': 1172, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/editing.txt', 'text': '			|:mksession|, |:split|, |:vsplit|, and |:tabe|.'}, {'lnum': 1470, 'col': 10, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/editing.txt', 'text': 'the edit session started.  This could be another person, in which case you'}, {'lnum': 1476, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/editing.txt', 'text': 'session or with another command (e.g., a filter command).  Then you will know'}, {'lnum': 561, 'col': 11, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'When the ''sessionoptions'' option contains "global", global variables that'}, {'lnum': 563, 'col': 15, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'stored in the session file |session-file|.'}, {'lnum': 567, 'col': 11, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'My_Var_6		session file'}, {'lnum': 1087, 'col': 34, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'are known inside the current Vim session.  Using expand() will first try using'}, {'lnum': 1088, 'col': 56, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'the environment variables known inside the current Vim session.  If that'}, {'lnum': 1608, 'col': 13, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': '				*v:this_session* *this_session-variable*'}, {'lnum': 1609, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'v:this_session	Full filename of the last loaded or saved session file.  See'}, {'lnum': 1610, 'col': 7, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': '		|:mksession|.  It is allowed to set this variable.  When no'}, {'lnum': 1611, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': '		session file has been saved, this variable is empty.'}, {'lnum': 1612, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': '		"this_session" also works, for backwards compatibility.'}, {'lnum': 5834, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'mksession		Compiled with support for |:mksession|.'}, {'lnum': 5915, 'col': 24, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'xsmp			Compiled with X session management support.'}, {'lnum': 5916, 'col': 44, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/eval.txt', 'text': 'xsmp_interact		Compiled with interactive X session management support.'}, {'lnum': 165, 'col': 47, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/ft_ada.txt', 'text': 'Setting a project file will also create a Vim session (|views-sessions|) so -'}, {'lnum': 191, 'col': 45, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/ft_ada.txt', 'text': '		Set gnat project file and load associated session.  An open'}, {'lnum': 192, 'col': 34, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/ft_ada.txt', 'text': '		project will be closed and the session written.  If called'}, {'lnum': 195, 'col': 18, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/ft_ada.txt', 'text': '		and associated session are closed.'}, {'lnum': 737, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui.txt', 'text': '12  SaveSesn		write session file for current situation'}, {'lnum': 738, 'col': 24, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui.txt', 'text': '13  NewSesn		write new session file'}, {'lnum': 739, 'col': 20, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui.txt', 'text': '14  LoadSesn		load session file'}, {'lnum': 396, 'col': 67, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'that''s not available in the plain GTK+ GUI:  Interaction with the session'}, {'lnum': 397, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'manager. |gui-gnome-session|'}, {'lnum': 413, 'col': 7, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'GNOME session support			*gui-gnome-session* *gnome-session*'}, {'lnum': 417, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'current session is stored to disk by using the |:mksession| command, and'}, {'lnum': 420, 'col': 11, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'The GNOME session support should also work with the KDE session manager.'}, {'lnum': 423, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'Note: The automatic session save works entirely transparent, in order to'}, {'lnum': 424, 'col': 31, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': 'avoid conflicts with your own session files, scripts and autocommands.  That'}, {'lnum': 426, 'col': 7, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': '- The session file is stored to a separate directory (usually $HOME/.gnome2).'}, {'lnum': 427, 'col': 4, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': '- ''sessionoptions'' is ignored, and a hardcoded set of appropriate flags is'}, {'lnum': 430, 'col': 33, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': '- The internal variable |v:this_session| is not changed when storing the'}, {'lnum': 431, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/gui_x11.txt', 'text': '  session.  Also, it is restored to its old value when logging in again.'}, {'lnum': 149, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/if_ole.txt', 'text': 'sessions open that should not react to OLE commands, use the non-OLE version,'}, {'lnum': 1317, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/index.txt', 'text': '|:mksession|	:mks[ession]	write session info to a file'}, {'lnum': 297, 'col': 58, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/message.txt', 'text': '- If the swapfile was left over from an old crashed edit session you may want'}, {'lnum': 821, 'col': 37, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/netbeans.txt', 'text': 'The content of netbeans.log after a session looks like this:'}, {'lnum': 452, 'col': 66, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '   |initialization|.  Most of them are performed for all editing sessions,'}, {'lnum': 455, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '   |:mksession|.'}, {'lnum': 5565, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '						*''sessionoptions''* *''ssop''*'}, {'lnum': 5566, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '''sessionoptions'' ''ssop''	string	(default: "blank,buffers,curdir,folds,'}, {'lnum': 5570, 'col': 48, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '			{not available when compiled without the +mksession'}, {'lnum': 5572, 'col': 32, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '	Changes the effect of the |:mksession| command.  It is a comma'}, {'lnum': 5590, 'col': 39, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '	   sesdir	the directory in which the session file is located'}, {'lnum': 5597, 'col': 40, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '			is restored, so that you can make a session for each'}, {'lnum': 5607, 'col': 56, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '	"slash" and "unix" are useful on Windows when sharing session files'}, {'lnum': 7219, 'col': 48, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '			{not available when compiled without the +mksession'}, {'lnum': 7229, 'col': 48, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '			{not available when compiled without the +mksession'}, {'lnum': 7465, 'col': 24, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/options.txt', 'text': '		:cnoremap ss so $vim/sessions/*.vim<C-Z>'}, {'lnum': 188, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/os_beos.txt', 'text': 'session, unless you use the File Types application to set Vim to be "Single'}, {'lnum': 13, 'col': 23, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/os_os2.txt', 'text': 'Win32s) in a Win-OS/2 session.  The notes in this file refer to the native'}, {'lnum': 32, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/os_os2.txt', 'text': 'Vim session may be editing the file when you start Vim up again on that file.'}, {'lnum': 192, 'col': 45, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/os_os2.txt', 'text': 'To copy text from the clipboard to your Vim session you can use the :r'}, {'lnum': 54, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/os_risc.txt', 'text': 'sessions).'}, {'lnum': 317, 'col': 48, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/os_win32.txt', 'text': '   Windows that a 16-bit application (your DOS session) has finished.  Vim'}, {'lnum': 308, 'col': 55, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': ' *g:netrw_uid*		(ftp) user-id,      retained on a per-session basis'}, {'lnum': 309, 'col': 57, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': ' *s:netrw_passwd*	(ftp) password,     retained on a per-session basis'}, {'lnum': 735, 'col': 55, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': 'The temporary file is then read into the main editing session window that'}, {'lnum': 954, 'col': 30, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': 'retain bookmarks between vim sessions.  See |netrw-gb| for how to return'}, {'lnum': 1094, 'col': 63, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': 'Every time you change to a new directory (new for the current session),'}, {'lnum': 1450, 'col': 64, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': '	   ssh-agent so you only have to type the passphrase once per session.'}, {'lnum': 1734, 'col': 47, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_netrw.txt', 'text': 'There is only one copy/move-to target per vim session; ie. the target is a'}, {'lnum': 27, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/pi_spec.txt', 'text': 'to use in this edit session.'}, {'lnum': 553, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/quickref.txt', 'text': '|:mksession| :mks[ession][!] [file]'}, {'lnum': 556, 'col': 15, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/quickref.txt', 'text': '				     this session later.'}, {'lnum': 839, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/quickref.txt', 'text': '''sessionoptions''  ''ssop''    options for |:mksession|'}, {'lnum': 1134, 'col': 44, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/quickref.txt', 'text': '|-r|	-r {file} ..	    recover aborted edit session'}, {'lnum': 16, 'col': 31, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '8. Views and Sessions		|views-sessions|'}, {'lnum': 201, 'col': 40, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '		is read to recover a crashed editing session.  See'}, {'lnum': 206, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '		edit sessions"}'}, {'lnum': 412, 'col': 26, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '		will wait for the edit session to finish (e.g., mail or'}, {'lnum': 419, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '		session to finish (e.g., mail or readnews).  If you want gvim'}, {'lnum': 568, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '		restoring the session on login.  See |gui-gnome-session|'}, {'lnum': 652, 'col': 40, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '	program which also waits for the edit session to finish.  As a'}, {'lnum': 869, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'sessions.  Put it in a place so that it will be found by 3b:'}, {'lnum': 1159, 'col': 31, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '":mkvimrc", ":mkexrc" and ":mksession" write the command to set or reset the'}, {'lnum': 1163, 'col': 34, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '8. Views and Sessions					*views-sessions*'}, {'lnum': 1173, 'col': 18, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '						*Session* *session-file*'}, {'lnum': 1187, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '|+mksession| feature}.'}, {'lnum': 1189, 'col': 19, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '							*:mks* *:mksession*'}, {'lnum': 1191, 'col': 4, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '			session.'}, {'lnum': 1195, 'col': 19, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'The output of ":mksession" is like ":mkvimrc", but additional commands are'}, {'lnum': 1196, 'col': 48, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'added to the file.  Which ones depends on the ''sessionoptions'' option.  The'}, {'lnum': 1198, 'col': 46, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '1. Restores global mappings and options, if ''sessionoptions'' contains'}, {'lnum': 1201, 'col': 39, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   at least one lowercase letter, if ''sessionoptions'' contains "globals".'}, {'lnum': 1203, 'col': 39, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '4. Restores the current directory if ''sessionoptions'' contains "curdir", or'}, {'lnum': 1204, 'col': 64, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   sets the current directory to where the Session file is if ''sessionoptions'''}, {'lnum': 1206, 'col': 42, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '5. Restores GUI Vim window position, if ''sessionoptions'' contains "winpos".'}, {'lnum': 1207, 'col': 30, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '6. Restores screen size, if ''sessionoptions'' contains "resize".'}, {'lnum': 1209, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   ''sessionoptions'' contains "buffers" then all buffers are restored,'}, {'lnum': 1212, 'col': 52, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '8. Restores all windows with the same layout.  If ''sessionoptions'' contains'}, {'lnum': 1213, 'col': 44, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   "help", help windows are restored.  If ''sessionoptions'' contains "blank",'}, {'lnum': 1215, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   If ''sessionoptions'' contains "winsize" and no (help/blank) windows were'}, {'lnum': 1219, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   ''sessionoptions'' is used instead of ''viewoptions''.'}, {'lnum': 1226, 'col': 44, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'available in the internal variable "v:this_session" |this_session-variable|.'}, {'lnum': 1228, 'col': 29, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '  :nmap <F2> :wa<Bar>exe "mksession! " . v:this_session<CR>:so ~/sessions/'}, {'lnum': 1231, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'A session includes all tab pages, unless "tabpages" was removed from'}, {'lnum': 1232, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '''sessionoptions''. |tab-page|'}, {'lnum': 1234, 'col': 58, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'The |SessionLoadPost| autocmd event is triggered after a session file is'}, {'lnum': 1237, 'col': 11, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'While the session file is loading the SessionLoad global variable is set to 1.'}, {'lnum': 1265, 'col': 39, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   When storing the view as part of a session and "options" is in'}, {'lnum': 1266, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': '   ''sessionoptions'', global values for local options will be stored too.'}, {'lnum': 1335, 'col': 62, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'enter Vim and directly start working in your desired setup. |session-file|'}, {'lnum': 1368, 'col': 69, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/starting.txt', 'text': 'remembered for all the files you have opened in the current editing session,'}, {'lnum': 171, 'col': 63, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '''foldcolumn'' in modeline applied to wrong window when using a session. (Teemu'}, {'lnum': 801, 'col': 51, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '7   Add a way to send an email for a crashed edit session.  Create a file when'}, {'lnum': 803, 'col': 60, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '    the file.  Supply a program that can check for crashed sessions (either'}, {'lnum': 1729, 'col': 71, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '7   When Vim detects a file is being edited elsewhere and it''s a gvim session'}, {'lnum': 1732, 'col': 34, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '8   Support saving and restoring session for X windows?  It should work to do'}, {'lnum': 1733, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '    ":mksession" and use "-S fname" for the restart command.  The'}, {'lnum': 1895, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '-   When creating a session, also store folds for buffers in the buffer list,'}, {'lnum': 1897, 'col': 68, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '-   When currently editing the first file in the argument list the session'}, {'lnum': 3556, 'col': 41, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '    same files in the windows.  Use ":mksession" code?'}, {'lnum': 3584, 'col': 22, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '8   DOS/Windows: ":mksession" generates a "cd" command where "aa\#bb" means'}, {'lnum': 3586, 'col': 44, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '7   When there is a "help.txt" window in a session file, restoring that'}, {'lnum': 3587, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '    session will not get the "LOCAL ADDITIONS" back.'}, {'lnum': 3588, 'col': 14, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '8   With ":mksession" always store the ''sessionoptions'' option, even when'}, {'lnum': 3590, 'col': 20, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '8   When using ":mksession", also store a command to reset all options to'}, {'lnum': 3593, 'col': 14, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '7   With ":mksession" also store the tag stack and jump history. (Michal'}, {'lnum': 3595, 'col': 63, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '7   Persistent variables: "p:var"; stored in viminfo file and sessions files.'}, {'lnum': 4261, 'col': 42, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/todo.txt', 'text': '-   Several top-level windows in one Vim session.  Be able to use a different'}, {'lnum': 148, 'col': 14, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_11.txt', 'text': '	(2) An edit session for this file crashed. ~'}, {'lnum': 158, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_11.txt', 'text': '1. Another edit session is active on this file.  Look in the message for the'}, {'lnum': 179, 'col': 45, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_11.txt', 'text': '   Then you very likely have a crashed edit session that is worth recovering.'}, {'lnum': 199, 'col': 34, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_11.txt', 'text': 'It is good if a previous editing session crashed without having made any'}, {'lnum': 244, 'col': 57, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_11.txt', 'text': '   loading a script that edits several files, such as a session with multiple'}, {'lnum': 261, 'col': 30, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_11.txt', 'text': 'the case when the other edit session puts the swap files in another directory'}, {'lnum': 241, 'col': 14, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'your editing session and restoring it the next day.'}, {'lnum': 242, 'col': 10, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '   A Vim session contains all the information about what you are editing.'}, {'lnum': 245, 'col': 6, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'the ''sessionoptions'' option, described below.)'}, {'lnum': 246, 'col': 36, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '   The following command creates a session file: >'}, {'lnum': 248, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '	:mksession vimbook.vim'}, {'lnum': 250, 'col': 35, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'Later if you want to restore this session, you can use this command: >'}, {'lnum': 254, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'If you want to start Vim and restore a specific session, you can use the'}, {'lnum': 260, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'session (actually, you can source any Vim script with -S, thus it might as'}, {'lnum': 265, 'col': 45, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '   What exactly is restored depends on the ''sessionoptions'' option.  The'}, {'lnum': 279, 'col': 7, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '	:set sessionoptions+=resize'}, {'lnum': 284, 'col': 24, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'The obvious way to use sessions is when working on different projects.'}, {'lnum': 285, 'col': 23, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'Suppose you store you session files in the directory "~/.vim".  You are'}, {'lnum': 290, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '	:mksession! ~/.vim/secret.vim'}, {'lnum': 293, 'col': 72, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'This first uses ":wall" to write all modified files.  Then the current session'}, {'lnum': 294, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'is saved, using ":mksession!".  This overwrites the previous session.  The'}, {'lnum': 295, 'col': 31, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'next time you load the secret session you can continue where you were at this'}, {'lnum': 296, 'col': 47, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'point.  And finally you load the new "boring" session.'}, {'lnum': 299, 'col': 57, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'up the window layout, you can go back to the last saved session: >'}, {'lnum': 304, 'col': 53, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'where you are now, by saving the current setup in a session, or keep the'}, {'lnum': 305, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'session file as a starting point.'}, {'lnum': 306, 'col': 25, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '   Another way of using sessions is to create a window layout that you like to'}, {'lnum': 307, 'col': 25, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'use, and save this in a session.  Then you can go back to this layout whenever'}, {'lnum': 337, 'col': 65, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'You can resize the windows a bit to your liking.  Then save the session with:'}, {'lnum': 339, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '	:mksession ~/.vim/mine.vim'}, {'lnum': 354, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '''sessionoptions''.  The session files will then be written in a format that can'}, {'lnum': 357, 'col': 7, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '	:set sessionoptions+=unix,slash'}, {'lnum': 360, 'col': 61, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'write Unix files, but Unix Vim can''t read MS-Windows format session files.'}, {'lnum': 370, 'col': 44, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '   In most situations you will want to use sessions separately from viminfo.'}, {'lnum': 371, 'col': 39, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'This can be used to switch to another session, but keep the command line'}, {'lnum': 372, 'col': 47, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'history.  And yank text into registers in one session, and paste it back in'}, {'lnum': 373, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'another session.'}, {'lnum': 374, 'col': 47, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '   You might prefer to keep the info with the session.  You will have to do'}, {'lnum': 377, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': '	:mksession! ~/.vim/secret.vim'}, {'lnum': 388, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'A session stores the looks of the whole of Vim.  When you want to store the'}, {'lnum': 392, 'col': 38, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'defined a few folds.  Just like with sessions, you can remember this view on'}, {'lnum': 393, 'col': 60, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'the file and restore it later.  Actually, when you store a session, it stores'}, {'lnum': 442, 'col': 60, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_21.txt', 'text': 'file.  Typing these commands each time is boring.  Using a session or view for'}, {'lnum': 38, 'col': 38, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/usr_30.txt', 'text': '   Take a look at an example ":make" session.  (Typical :make sessions generate'}, {'lnum': 340, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/various.txt', 'text': 'N  *+mksession*		|:mksession|'}, {'lnum': 406, 'col': 21, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/various.txt', 'text': '   *+xsmp*		XSMP (X session management) support'}, {'lnum': 407, 'col': 41, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/various.txt', 'text': '   *+xsmp_interact*	interactive XSMP (X session management) support'}, {'lnum': 69, 'col': 40, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version4.txt', 'text': 'If you have a swap file from a crashed session with 3.0, use Vim 3.0 to'}, {'lnum': 63, 'col': 28, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'Session files added			|new-session-files|'}, {'lnum': 84, 'col': 10, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'Improved session files			|improved-sessions|'}, {'lnum': 575, 'col': 39, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '		unique number.  Avoids that two Vim sessions overwrite each'}, {'lnum': 2085, 'col': 30, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'Session files added					*new-session-files*'}, {'lnum': 2091, 'col': 43, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'windows.  File names are made relative to session file.'}, {'lnum': 2092, 'col': 6, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'The ''sessionoptions'' option sets behavior of ":mksession". (Negri)'}, {'lnum': 2196, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '''sessionoptions'' Sets behavior of ":mksession". (Negri)'}, {'lnum': 2239, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '|:mksession|	Create a session file.'}, {'lnum': 2549, 'col': 57, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '"A:\dir\file" -> "\dir\file".  This helps when moving a session file on a'}, {'lnum': 3203, 'col': 10, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'Improved session files				*improved-sessions*'}, {'lnum': 3206, 'col': 16, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'New words for ''sessionoptions'':'}, {'lnum': 3217, 'col': 9, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'The ":mksession" and ''sessionoptions'' are now in the +mksession feature.'}, {'lnum': 3219, 'col': 58, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'The top line of the window is also restored when using a session file.'}, {'lnum': 3221, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '":mksession" and ":mkvimrc" don''t store ''fileformat'', it should be detected'}, {'lnum': 4440, 'col': 62, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'default mappings.  Also caused errors for ":mkvimrc" and ":mksession".'}, {'lnum': 4497, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'mksession didn''t restore the cursor column properly when it was after a tab.'}, {'lnum': 4499, 'col': 48, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'restore all windows when "winsize" was not in ''sessionoptions''. (Webb)'}, {'lnum': 4521, 'col': 15, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'When saving a session without any buffers loaded, there would be a ":normal"'}, {'lnum': 4659, 'col': 6, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'In a session file, a "%" in a file name caused trouble, because fprintf() was'}, {'lnum': 5327, 'col': 19, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '":mkexrc" and ":mksession" wrote the current value of ''textmode''.  That may'}, {'lnum': 6252, 'col': 25, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'Problem:    Using "this_session" variable does not work, requires preceding it'}, {'lnum': 6253, 'col': 43, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '	    with "v:".  Default filename for ":mksession" isn''t mentioned'}, {'lnum': 6255, 'col': 33, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': 'Solution:   Support using "this_session" to be backwards compatible.'}, {'lnum': 7000, 'col': 40, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version5.txt', 'text': '	    property of the window to let the session manager know we finished'}, {'lnum': 327, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '''sessionoptions'' now includes "curdir" by default.  This means that restoring'}, {'lnum': 328, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'a session will result in the current directory being restored, instead of'}, {'lnum': 329, 'col': 34, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'going to the directory where the session file is located.'}, {'lnum': 331, 'col': 3, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'A session deleted all buffers, deleting all marks.  Now keep the buffer list,'}, {'lnum': 1147, 'col': 26, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'restored.  It''s like ":mksession" for one window.'}, {'lnum': 1159, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '":mksession" now also works fine with vertical splits.  It has been further'}, {'lnum': 1163, 'col': 2, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '''sessionoptions'' is used for ":mkview" as well.'}, {'lnum': 1164, 'col': 33, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Added "curdir" and "sesdir" to ''sessionoptions''.  Allows selection of what'}, {'lnum': 1167, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'The session file now also contains the argument list(s).'}, {'lnum': 1222, 'col': 55, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '''previewwindow'' Set in the preview window.  Used in a session file to mark a'}, {'lnum': 1462, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '"-S session.vim" argument: Source a script file when starting up.  Convenient'}, {'lnum': 1463, 'col': 25, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'way to start Vim with a session file.'}, {'lnum': 1895, 'col': 37, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '  to positions from a previous edit session.'}, {'lnum': 2482, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '":mksession" always used the full path name for a buffer, also when the short'}, {'lnum': 2484, 'col': 20, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '":mkvimrc" and ":mksession" didn''t save ''wildchar'' and ''pastetoggle'' in such a'}, {'lnum': 3348, 'col': 16, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'When using ":mksession" while there is help window, it would later be restored'}, {'lnum': 3352, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'The session file contained absolute path names in option values, that doesn''t'}, {'lnum': 3938, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    ":mksession" can''t handle file names with a space.'}, {'lnum': 4060, 'col': 52, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    The toolbar buttons to load and save a session do not correctly'}, {'lnum': 4061, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '	    use v:this_session.'}, {'lnum': 4062, 'col': 30, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Solution:   Check for v:this_session to be empty instead of existing.'}, {'lnum': 4190, 'col': 26, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    When using a session file that has the same file in two windows,'}, {'lnum': 4339, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    ":mksession" doesn''t restore editing a file that has a ''#'' or ''%'''}, {'lnum': 5034, 'col': 60, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Solution:   Add an argument to "start" to use a foreground session (Michael'}, {'lnum': 6194, 'col': 12, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Proper X11 session management.  Fixes that the WM_SAVE_YOURSELF event was not'}, {'lnum': 6796, 'col': 19, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    When ''sessionoptions'' contains "globals", or "localoptions" and an'}, {'lnum': 7551, 'col': 23, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    Using ":mksession" uses the default session file name, but "vim'}, {'lnum': 7553, 'col': 29, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Solution:   Use the default session file name if "-S" is the last command'}, {'lnum': 7780, 'col': 43, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    The script generated with ":mksession" doesn''t work properly when'}, {'lnum': 9523, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    ":mksession" also stores folds for buffers which will not be'}, {'lnum': 11115, 'col': 25, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    Restoring a session with zero-height windows does not work'}, {'lnum': 12816, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    ":mksession" always puts "set nocompatible" in the session file.'}, {'lnum': 13172, 'col': 41, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    When accidentally opening a session in Vim which has already been'}, {'lnum': 13399, 'col': 28, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    When loading a session and aborting when a swap file already'}, {'lnum': 13735, 'col': 23, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    Loading a session file results in editing the wrong file in the'}, {'lnum': 14487, 'col': 15, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': 'Problem:    A session file doesn''t work when created while the current'}, {'lnum': 14488, 'col': 57, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version6.txt', 'text': '	    directory contains a space or the directory of the session files'}, {'lnum': 974, 'col': 35, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': '|SessionLoadPost|	after loading a session file. (Yegappan Lakshmanan)'}, {'lnum': 1359, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'When a session file is loaded while editing an unnamed, empty buffer that'}, {'lnum': 1536, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': '":mksession" sets the SessionLoad variable to notify plugins.  A modeline is'}, {'lnum': 1537, 'col': 14, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'added to the session file to set ''filetype'' to "vim".'}, {'lnum': 2098, 'col': 47, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'After deleting files from the argument list a session file generated with'}, {'lnum': 2099, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': '":mksession" may contain invalid ":next" commands.'}, {'lnum': 2286, 'col': 11, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'The "load session" toolbar item could not handle a space or other special'}, {'lnum': 2287, 'col': 22, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'characters in v:this_session.'}, {'lnum': 2305, 'col': 46, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': '''titleold'' was included in ":mkexrc" and ":mksession" files.'}, {'lnum': 2640, 'col': 22, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Added "tabpages" to ''sessionoptions''.'}, {'lnum': 2907, 'col': 6, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'In a session file, when an empty buffer is wiped out, do this silently.'}, {'lnum': 3525, 'col': 28, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    ":unlet v:this_session" causes a crash. (Marius Roets)'}, {'lnum': 3961, 'col': 29, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    When creating a session file and there are several tab pages and'}, {'lnum': 3964, 'col': 8, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': '	    A session with multiple tab pages may result in "No Name" buffers.'}, {'lnum': 4136, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    ":mksession" doesn''t restore window layout correctly in tab pages'}, {'lnum': 4538, 'col': 60, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    When using local directories and tab pages ":mksession" uses a'}, {'lnum': 4821, 'col': 23, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    The Gnome session file doesn''t restore tab pages.'}, {'lnum': 4822, 'col': 38, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Solution:   Add SSOP_TABPAGES to the session flags. (Matias D''Ambrosio)'}, {'lnum': 5361, 'col': 24, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': '	    ":mkexrc" and ":mksession" do not correctly set the options.'}, {'lnum': 5558, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    ":mksession" always adds ":setlocal autoread". (Christian J.'}, {'lnum': 5866, 'col': 59, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    When using tab pages and an argument list the session file may'}, {'lnum': 6653, 'col': 58, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    The value of ''pastetoggle'' is written to the session file without'}, {'lnum': 6998, 'col': 17, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/version7.txt', 'text': 'Problem:    ":mksession" doesn''t work for ":map , foo", ":sunmap ,". (Ethan'}, {'lnum': 753, 'col': 20, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/vi_diff.txt', 'text': 'an aborted editing session with "vim -r file".  Using the swap file can be'}, {'lnum': 842, 'col': 53, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/vi_diff.txt', 'text': '-b {blksize}	Elvis: Use {blksize} blocksize for the session file.'}, {'lnum': 865, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/vi_diff.txt', 'text': '-f {session}	Elvis: Use {session} as the session file.'}, {'lnum': 23, 'col': 29, 'valid': 1, 'vcol': 0, 'nr': 0, 'type': '', 'pattern': '', 'filename': '/usr/share/vim/vim72/doc/workshop.txt', 'text': 'for gvim.  A workshop debug session will have a debugging window and an editor'}])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/wcdb_hub
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +41 index.php
badd +55 style/newcos.css
badd +0 actions/schedule.php
badd +150 ~/.vimrc
badd +65 ~/Dropbox/vim/plugin/session.vim
args ~/Documents/wcdb_hub
set lines=50 columns=128
edit actions/schedule.php
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 20 + 64) / 128)
exe 'vert 2resize ' . ((&columns * 107 + 64) / 128)
argglobal
enew
file [BufExplorer]
setlocal fdm=marker
setlocal fde=0
setlocal fmr={,}
setlocal fdi=#
setlocal fdl=100
setlocal fml=1
setlocal fdn=20
setlocal nofen
lcd ~/Documents/wcdb_hub
wincmd w
argglobal
setlocal fdm=marker
setlocal fde=0
setlocal fmr={,}
setlocal fdi=#
setlocal fdl=100
setlocal fml=1
setlocal fdn=20
setlocal fen
24
normal zo
92
normal zo
95
normal zo
95
normal zo
92
normal zo
24
normal zo
let s:l = 93 - ((25 * winheight(0) + 24) / 48)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
93
normal! 028l
lcd ~/Documents/wcdb_hub
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 20 + 64) / 128)
exe 'vert 2resize ' . ((&columns * 107 + 64) / 128)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
tabnext 1
2wincmd w

" vim: ft=vim ro nowrap smc=128
